---
title: "Supplemental Information"
author: "Christine Raj"
---

```{r, echo=FALSE, message=FALSE}
library(tidyverse)
library(tidyr)
library(dplyr)
library(ggplot2)
library(lubridate)
library(leaflet)
library(readxl)
library(dtplyr)
library(data.table)
library(plotly)
library(knitr)
library(rnaturalearth)
library(rnaturalearthdata)
library(sf)

```

```{r, echo=FALSE, message=FALSE}
#getwd()
setwd("/Users/christineraj/Documents/PM566/PM566F")

#uploading the seperate data sheets and getting rid of all the labels from the first 5 rows
whodata1labels <- data.table::fread("whs2023_annex1.csv")
labels1 <- whodata1labels[1:5, ]
whodata1 <- whodata1labels[-(1:5), ]
whodata2labels <- data.table::fread("whs2023_annex2.csv")
labels2 <- whodata2labels[1:5, ]
whodata2 <- whodata2labels[-(1:5), ]

# merging who data
invisible(
merge(
  # Data
  x     = whodata1,      
  y     = whodata2, 
  # List of variables to match
  by.x  = "V1",
  by.y  = "V1", 
  # Which obs to keep?
  all.x = TRUE,      
  ) %>% nrow()
)
whodata <- merge(
  # Data
  x     = whodata1,      
  y     = whodata2, 
  # List of variables to match
  by.x  = "V1",
  by.y  = "V1", 
  # Which obs to keep?
  all.x = TRUE,      
  all.y = FALSE
  )
#head(whodata[, list(V1, V2.x, V3.y)], n = 8)
whodata <- whodata[-(1:4), ]

#merging labels for reference
#merge(
  # Data
 # x     = labels1,      
#  y     = labels2, 
  # List of variables to match
#  by.x  = "V1",
#  by.y  = "V1", 
  # Which obs to keep?
#  all.x = TRUE,  
#  allow.cartesian = TRUE
#  ) %>% nrow()

#labels <- merge(
  # Data
 # x     = labels1,      
#  y     = labels2, 
  # List of variables to match
 # by.x  = "V1",
#  by.y  = "V1", 
  # Which obs to keep?
 # all.x = TRUE,      
#  allow.cartesian = TRUE
#  )
#head(labels[, list(V1, V2.x, V3.y)], n = 5)

#renaming key variables for convenience
whodata <- whodata %>% rename(countries = V1)
whodata <- whodata %>% rename(year5mortality = V14.x)
whodata <- whodata %>% rename(neonatalmortality = V15.x)
whodata <- whodata %>% rename(familyplanning = V6.y)
whodata <- whodata %>% rename(adolescentbirths15_19 = V8.y)
whodata <- whodata %>% rename(adolescentbirths10_14 = V9.y)




#dim(whodata)
#head(whodata)
#tail(whodata)

#found out there is an extra row that is meant as a label for years that needs to be deleted so deleting this row and then rechecking footer
row_numbers <- which(whodata$countries == "WHO region")
whodata <- whodata[-row_numbers, ]
#tail(whodata)



suppressWarnings({
#checking the variable types
variable_types <- sapply(whodata, class)
#print(variable_types)
is_numeric <- is.numeric(whodata$familyplanning)
#print(is_numeric)

#Finding out that all the variables are coded as characters rather than numberic so changing all relevant variables to numeric and then rechecking all variable types
whodata$familyplanning <- as.numeric(whodata$familyplanning)
whodata$year5mortality <- as.numeric(whodata$year5mortality)
whodata$neonatalmortality <- as.numeric(whodata$neonatalmortality)
whodata$adolescentbirths15_19 <- as.numeric(whodata$adolescentbirths15_19)
whodata$adolescentbirths10_14 <- as.numeric(whodata$adolescentbirths10_14)
#variable_types <- sapply(whodata, class)
#print(variable_types)

#Looking at relevant variables closer
#summary(whodata$familyplanning)
#summary(whodata$year5mortality)
#summary(whodata$neonatalmortality)
#summary(whodata$adolescentbirths15_19)
#summary(whodata$adolescentbirths10_14)

#eliminating NAs in primary variables only
whodata <- whodata[!is.na(whodata$familyplanning)]
whodata <- whodata[!is.na(whodata$neonatalmortality)]
#summary(whodata$familyplanning)
#summary(whodata$neonatalmortality)
})


```

```{r, echo=FALSE}
world <- ne_countries(scale = "medium", returnclass = 'sf')
mapdata <- merge(world, whodata, by.x = "name_long", by.y = "countries", all.x = TRUE)

#mapdata %>%
 # ggplot() +
#  geom_sf(data = mapdata, aes(fill = familyplanning)) +
#  scale_fill_gradient(low = "lightblue", high = "darkblue") +
#  labs(title = "Family Planning by Country")

mapdata %>%
  ggplot() +
  geom_sf(data = mapdata, aes(fill = neonatalmortality)) +
  scale_fill_gradient(low = "lightgreen", high = "darkgreen") +
  labs(title = "Neonatal Mortality by Country")

```

This density map shows the number of neonatal mortality per 1000 throughout the world in places we have data from.

```{r, echo=FALSE, message=FALSE}
#summary statistics
cor(whodata$familyplanning, whodata$neonatalmortality, use="complete")
#cor(whodata$familyplanning, whodata$year5mortality, use = "complete")
#cor(whodata$familyplanning, whodata$adolescentbirths15_19, use = "complete")
#cor(whodata$familyplanning, whodata$adolescentbirths10_14, use = "complete")


```

This is the correlation coefficient for neonatal mortality vs family planning.

```{r, echo=FALSE, message=FALSE}
cor(whodata$familyplanning, whodata$year5mortality, use = "complete")


```

This is the correlation coefficient for 5 year mortality vs family planning.

```{r, echo=FALSE, message=FALSE}
cor(whodata$familyplanning, whodata$adolescentbirths15_19, use = "complete")


```

This is the correlation coefficient for adolescent births age 15-19 vs family planning.

```{r, echo=FALSE, message=FALSE}
cor(whodata$familyplanning, whodata$adolescentbirths10_14, use = "complete")

```

This is the correlation coefficient for adolescent births age 10-14 vs family planning.

```{r, echo=FALSE, message=FALSE}
#exploratory graph
boxplot(whodata$familyplanning, main = "Percentage of Family Planning")
boxplot(whodata$neonatalmortality, main = "Neonatal Mortality per 1000")
boxplot(whodata$year5mortality, main = "5 year mortality per 1000")
boxplot(whodata$adolescentbirths15_19, main = "Adolescent births age 15-19 per 1000")
boxplot(whodata$adolescentbirths10_14, main = "Adolescent births age 10-14 per 1000")


```

These are the boxplots showing the distribution of data for our main variables.

```{r, echo=FALSE}
suppressWarnings({
whodata %>% 
  ggplot() + 
  geom_point(mapping = aes(x = whodata$familyplanning, y = whodata$adolescentbirths15_19)) + 
  stat_smooth(mapping = aes(x = familyplanning, y = adolescentbirths15_19)) +
  labs(title = "Adolescent Birth (15-19) by % of Modern Family Planning Use in Each Country") + 
  labs(x = expression("Percentage of Modern Family Planning"), y = "Adolescent Birth (age 15-19) per 1000")
})

```

This plot demonstrates adolescent births age 15-19 per 1000 people vs percentage of family planning. This demonstrates that though family planning increases, overall there is very little decrease in the number of adolescent births age 15-19. There is some decrease at high levels of family planning. However, there is a small overall decrease in the amount of adolescent births age 15-19 when percentage of family planning increases.

```{r, echo=FALSE}
suppressWarnings({
adolescent1519 <- plot_ly(data = whodata, x = ~whodata$familyplanning, y = ~whodata$adolescentbirths15_19, text = ~whodata$countries, type = "scatter", mode = "markers") 

adolescent1519 <- adolescent1519 %>% layout(
  title = "Adolescent Birth 15-19 by Percentage of Modern Family Planning with Country Names",
  xaxis = list(title = "Percentage of Modern Family Planning"),
  yaxis = list(title = "Adolescent Births Age 15-19 per 1000")
)

adolescent1519
})

```

This plot demonstrates adolescent births age 15-19 per 1000 people vs percentage of family planning. However, different from the previous graph, when you hover over a point you can find out what country that point represents.

```{r, echo=FALSE}
suppressWarnings({
whodata %>% 
  ggplot() + 
  geom_point(mapping = aes(x = whodata$familyplanning, y = whodata$adolescentbirths10_14)) + 
  stat_smooth(mapping = aes(x = familyplanning, y = adolescentbirths10_14)) +
  labs(title = "Adolescent Birth (10-14) by % of Modern Family Planning Use in Each Country") + 
  labs(x = expression("Percentage of Modern Family Planning"), y = "Adolescent Birth (age 10-14) per 1000")
})

```

This plot demonstrates adolescent births age 10-14 per 1000 people vs percentage of family planning. This demonstrates that there is very little relationship between adolescent births age 10-14 and family planning. There is a very weak negative correlation but it does not look to be very significant.

```{r, echo=FALSE}
suppressWarnings({
adolescent1014 <- plot_ly(data = whodata, x = ~whodata$familyplanning, y = ~whodata$adolescentbirths10_14, text = ~whodata$countries, type = "scatter", mode = "markers") 

adolescent1014 <- adolescent1014 %>% layout(
  title = "Adolescent Birth (10-14) by Percentage of Modern Family Planning with Country Names",
  xaxis = list(title = "Percentage of Modern Family Planning"),
  yaxis = list(title = "Adolescent Births Age 10-14 per 1000")
)

adolescent1014
})

```

This plot demonstrates adolescent births age 10-14 per 1000 people vs percentage of family planning. However, different from the previous graph, when you hover over a point you can find out what country that point represents.
